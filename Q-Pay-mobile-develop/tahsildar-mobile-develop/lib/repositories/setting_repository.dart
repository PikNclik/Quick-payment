/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com

import 'dart:async';
import 'base_repository.dart';
import 'package:dio/dio.dart';
import 'package:get_it/get_it.dart';
import 'package:lazy_evaluation/lazy_evaluation.dart';
import 'package:tahsaldar/models/data_models.dart';
import 'package:tahsaldar/models/responses/base_response/base_response.dart';
import 'package:tahsaldar/network/setting_rest_client/setting_rest_client.dart';

class SettingRepository extends BaseRepository {
  final _settingRestClient = Lazy<SettingRestClient>(() => SettingRestClient(GetIt.I.get<Dio>()));
  SettingRestClient get settingRestClient => _settingRestClient.value;

  Future<BaseResponse<List<Setting>>> findAll(int page, {String? query}) {
    final cancelToken = CancelToken();
    return getResponse(
      () => settingRestClient.findAll(cancelToken: cancelToken).onError((error, _) => catchError<List<Setting>>(error)),
      cancelToken: cancelToken,
    );
  }

  Future<BaseResponse<Setting>> findOne(String key) {
    final cancelToken = CancelToken();
    return getResponse(
      () => settingRestClient.findOne(key: key, cancelToken: cancelToken).onError((error, _) => catchError<Setting>(error)),
      cancelToken: cancelToken,
    );
  }
}
