/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com

import 'dart:async';
import 'package:tahsaldar/models/responses/list_response/list_response.dart';

import 'base_repository.dart';
import 'package:dio/dio.dart';
import 'package:get_it/get_it.dart';
import 'package:lazy_evaluation/lazy_evaluation.dart';
import 'package:tahsaldar/models/data_models.dart';
import 'package:tahsaldar/models/responses/base_response/base_response.dart';
import 'package:tahsaldar/network/notification_rest_client/notification_rest_client.dart';

class NotificationRepository extends BaseRepository {
  final _notificationRestClient = Lazy<NotificationRestClient>(() => NotificationRestClient(GetIt.I.get<Dio>()));
  NotificationRestClient get notificationRestClient => _notificationRestClient.value;

  Future<BaseResponse<ListResponse<Notification>>> findAll(int page, {String? query}) {
    final cancelToken = CancelToken();
    return getResponse(
      () => notificationRestClient
          .findAll(page: page, query: query, cancelToken: cancelToken)
          .onError((error, _) => catchError<ListResponse<Notification>>(error)),
      cancelToken: cancelToken,
    );
  }

  Future<BaseResponse<Notification>> findOne(String id) {
    final cancelToken = CancelToken();
    return getResponse(
      () => notificationRestClient.findOne(id: id, cancelToken: cancelToken).onError((error, _) => catchError<Notification>(error)),
      cancelToken: cancelToken,
    );
  }
}
