/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
import 'package:get_it/get_it.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:tahsaldar/extensions/date_extension.dart';

import 'secure_storage.dart';

class AppStorage {
  static SharedPreferences getPreferences() => GetIt.I.get<SharedPreferences>();

  /// config [SharedPreferences] as a global instance.
  ///
  /// call this method in `main.dart` before `runApp()`.
  static Future<void> storageConfig() async {
    try {
      GetIt.I.registerSingleton<SharedPreferences>((await SharedPreferences.getInstance()));
    } catch (_) {}
  }

  static Future<String?> getFcmToken() async {
    return await SecureStorage.read(key: 'fcm_token');
  }

  static Future<void> setFcmToken(String fcmToken) async {
    await SecureStorage.write(key: 'fcm_token', value: fcmToken);
  }

  static Future<bool> getNotificationReceivingStatus() async {
    /// If true allow receiving notifications
    /// else mute notifications
    String? status = await SecureStorage.read(key: 'notification');
    if (status != null && status.contains('off')) return false;
    return true;
  }

  static Future<void> setNotificationReceivingStatus(bool status) async {
    await SecureStorage.write(key: 'notification', value: status ? "on" : "off");
  }

  static Future<void> setLanguage(String language) async {
    await getPreferences().setString("language", language);
  }

  static String getLanguage() {
    // setting it to default device language [if no language is return from local storage]
    // return getPreferences().getString("language") ?? Platform.localeName.substring(0, 2);
    return getPreferences().getString("language") ?? 'ar';
  }

  static Future<void> setResendCodeDatetime(DateTime dateTime) async {
    await getPreferences().setString("resend_code", dateTime.toLocal().toIso8601String());
  }

  static DateTime? getResendCodeDatetime() {
    final datetime = getPreferences().getString("resend_code");
    if (datetime != null) {
      return datetime.toString().isoStringToDate();
    }
    return null;
  }
}
