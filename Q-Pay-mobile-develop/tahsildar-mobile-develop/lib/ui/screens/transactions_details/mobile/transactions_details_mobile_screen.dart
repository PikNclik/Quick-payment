/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
import 'package:easy_localization/easy_localization.dart';
import 'package:flutter/material.dart';
import 'package:flutterx_live_data/flutterx_live_data.dart';
import 'package:tahsaldar/models/data/payment/payment.dart';
import 'package:tahsaldar/ui/core/layouts/theme_widget.dart';
import 'package:tahsaldar/ui/resources/colors/colors.dart';
import 'package:tahsaldar/ui/resources/dimensions/dimensions.dart';
import 'package:tahsaldar/ui/resources/text_styles/text_styles.dart';
import 'package:tahsaldar/ui/widgets/animations/animated_column.dart';
import "package:tahsaldar/ui/widgets/instance/instance_builder.dart";

import '../../../../config/ui_config.dart';
import '../../../../router/app_router.dart';
import '../../../pickers/date_time_picker.dart';
import '../../../widgets/buttons/customized_button.dart';
import '../../../widgets/buttons/outlined_icon_button.dart';
import '../../../widgets/confirmation_dialog/confirmation_dialog.dart';
import '../../transactions/widgets/top_section/direct_send_icon.dart';
import "../viewmodels/transactions_details_viewmodel.dart";
import '../widgets/transaction_date.dart';
import '../widgets/transaction_details_card.dart';
import '../widgets/transaction_note.dart';

class TransactionsDetailsMobileScreen extends StatelessWidget {
  const TransactionsDetailsMobileScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return InstanceBuilder<TransactionsDetailsViewModel>(
      builder: (viewModel) {
        return ThemeWidget(
          builder: (context, theme) {
            return LiveDataBuilder<Payment>(
              data: viewModel.params.transaction,
              builder: (context, value) {
                return Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 16),
                  child: AnimatedColumn(
                    children: [
                      const SizedBox(height: spaceBelowAppBar),
                      // Row(
                      //   mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      //   children: [
                      //     CustomizedButton(
                      //       text: "reorder",
                      //       icon:
                      //           const Icon(Icons.refresh, color: Colors.white),
                      //       callback: () async {
                      //         viewModel.reorderPayment();
                      //       },
                      //     ),
                      //     const DirectSend(),
                      //   ],
                      // ),
                      const SizedBox(height: 30),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text('#${value.id}', style: headline1),
                          TransactionDate(
                            transaction: value,
                            transactionDateType: value.status == 3
                                ? TransactionDateType.paidAt
                                : TransactionDateType.scheduled,
                          ),
                        ],
                      ),
                      const SizedBox(height: 13),
                      TransactionDetailsCard(transaction: value),
                      const SizedBox(height: 17),
                      if(value.details!=null)
                      TransactionNote(note: value.details ?? ''),
                      const SizedBox(height: 17),
                      if (value.status == 2)
                        CustomizedButton(
                          enabled: true,
                          text: 'update_request',
                          callback: () async {
                            final result = await appRouter.push(AddPayment(
                                isUpdate: true,
                                payment: viewModel.params.transaction.value));
                            if (result != null) {
                             appRouter.pop(true);
                            }
                          },
                          width: 200,
                        ),
                      const SizedBox(height: 16),
                      SizedBox(width: 200,
                        child: OutlinedIconButton(
                          enabled:!viewModel.params.transaction.value.isNotDeletable(),
                          text: 'delete_request',
                          svg: 'trash',
                          color: DesignColors.errorColor,
                          callback: () {
                            ConfirmDialog.openDialog(
                              context: context,
                              message: "are_you_sure_you_want_to_delete_this_transaction".tr(
                                namedArgs: {"model": "#${viewModel.params.transaction.value.id}"},
                              ),
                              onConfirm: () {
                                viewModel.deleteTransaction(viewModel.params.transaction.value.id.toString());
                              },
                            );
                          }

                        ),
                      ),
                    ],
                  ),
                );
              },
            );
          },
        );
      },
    );
  }
}
