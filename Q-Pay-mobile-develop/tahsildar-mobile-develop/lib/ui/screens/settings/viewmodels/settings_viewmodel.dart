/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
///
/// state management for UI
///
/// store and manage your liveData in [SettingsParams].
import 'package:lazy_evaluation/lazy_evaluation.dart';
import 'package:tahsaldar/repositories/user_repository.dart';
import 'package:tahsaldar/viewmodels/base_viewmodel.dart';
import '../../../../../../storage/storage.dart';
import '../../main/viewmodels/main_viewmodel.dart';
import '../widgets/language_setting.dart';
import 'settings_params.dart';

class SettingsViewModel extends BaseViewModel {
  final _params = Lazy(() => SettingsParams());
  SettingsParams get params => _params.value;

  final _userRepository = Lazy(() => UserRepository());
  UserRepository get userRepository => _userRepository.value;

  MainViewModel mainViewModel = MainViewModel();

  @override
  void onInit() {
    super.onInit();
    checkSetLanguage();
    checkNotificationsStatus();
  }

  handleReceivingNotifications() async {
    params.notificationSettingLoader.postValue(true);
    bool status = await AppStorage.getNotificationReceivingStatus();
    await AppStorage.setNotificationReceivingStatus(!status);
    await mainViewModel.updateFcmToken();
    params.notificationsStatus.postValue(!status);
    params.notificationSettingLoader.postValue(false);
  }

  checkNotificationsStatus() async {
    params.notificationSettingLoader.postValue(true);
    final status = await AppStorage.getNotificationReceivingStatus();
    params.notificationsStatus.postValue(status);
    params.notificationSettingLoader.postValue(false);
  }

  checkSetLanguage() {
    final language = AppStorage.getLanguage();
    params.preferredLanguage.postValue(fromStringLanguageToEnum(language));
  }

  void changeLanguage(Function() callback) {
    callHttpRequest(
      () => userRepository.updateLanguage(),
      loading: baseParams.loading,
      callback: (result) {
        if (result != null) callback();
      },
    );
  }
}
