/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
import 'dart:typed_data';

import 'package:easy_localization/easy_localization.dart';
import 'package:flutter/material.dart';
import 'package:flutterx_live_data/flutterx_live_data.dart';
import 'package:tahsaldar/ui/core/layouts/base_app_bar.dart';
import 'package:tahsaldar/ui/core/layouts/base_scaffold.dart';
import 'package:tahsaldar/ui/core/responsive/screen_type_layout.dart';
import "package:tahsaldar/ui/widgets/instance/instance_state.dart";
import 'package:tahsaldar/ui/widgets/loaders/live_data_loader.dart';

import "./viewmodels/image_cropper_viewmodel.dart";
import '../../resources/colors/colors.dart';
import '../../widgets/animations/animated_gesture.dart';
import '../../widgets/instance/instance_builder.dart';
import 'mobile/image_cropper_mobile_screen.dart';

class ImageCropperScreen extends StatefulWidget {
  const ImageCropperScreen({Key? key}) : super(key: key);

  @override
  State<ImageCropperScreen> createState() => _ImageCropperScreenState();
}

class _ImageCropperScreenState extends State<ImageCropperScreen> with InstanceState<ImageCropperScreen, ImageCropperViewModel>, ObserverMixin {
  @override
  void observeLiveData(observer, viewModel) {
    // register observers...
  }

  @override
  Widget screen(BuildContext context, viewModel) {
    return Stack(
      children: [
        InstanceBuilder<ImageCropperViewModel>(
          builder: (viewModel) => BaseScaffold(
            appBar: (context, theme) => baseAppBar(
              title: 'adjust_profile_image'.tr(),
              actions: [
                LiveDataBuilder<Uint8List?>(
                  data: viewModel.params.rawOriginalImage,
                  builder: (_, originalImage) {
                    return AnimatedGesture(
                      callback: viewModel.uploadAndUpdateUserProfile,
                      child: Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 16),
                        child: Icon(
                          Icons.check,
                          color: originalImage != null ? DesignColors.textColor : DesignColors.grey,
                        ),
                      ),
                    );
                  },
                ),
              ],
            ),
            builder: (context, theme) {
              return const ScreenTypeLayout(mobile: ImageCropperMobileScreen());
            },
          ),
        ),
        LoadingListenerWidget(loading: viewModel.baseParams.loading),
      ],
    );
  }

  @override
  ImageCropperViewModel registerInstance() => ImageCropperViewModel();
}
