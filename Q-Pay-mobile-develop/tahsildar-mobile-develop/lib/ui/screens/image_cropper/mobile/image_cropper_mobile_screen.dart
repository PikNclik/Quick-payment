/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
import 'dart:typed_data';

import 'package:flutter/material.dart';
import 'package:flutterx_live_data/flutterx_live_data.dart';
import 'package:tahsaldar/ui/core/layouts/base_layout.dart';
import 'package:tahsaldar/ui/core/layouts/theme_widget.dart';
import 'package:tahsaldar/ui/screens/image_cropper/lib/cropperx.dart';
import 'package:tahsaldar/ui/widgets/animations/animated_gesture.dart';
import "package:tahsaldar/ui/widgets/instance/instance_builder.dart";

import '../../../../config/ui_config.dart';
import '../../../widgets/buttons/outlined_icon_button.dart';
import "../viewmodels/image_cropper_viewmodel.dart";

class ImageCropperMobileScreen extends StatelessWidget {
  const ImageCropperMobileScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return InstanceBuilder<ImageCropperViewModel>(
      builder: (viewModel) {
        return ThemeWidget(
          builder: (context, theme) {
            return BaseLayout(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Column(
                    mainAxisAlignment: MainAxisAlignment.start,
                    children: [
                      const SizedBox(height: 50.0),
                      SizedBox(
                        width: screenSize(context).width,
                        height: screenSize(context).width - 32.0,
                        child: LiveDataBuilder<Uint8List?>(
                          data: viewModel.params.tempImage,
                          builder: (_, croppedImage) {
                            if (croppedImage != null) {
                              return CircleAvatar(
                                radius: (screenSize(context).width / 2) - 32.0,
                                backgroundImage: MemoryImage(croppedImage),
                              );
                            } else {
                              return LiveDataBuilder<Uint8List?>(
                                data: viewModel.params.rawOriginalImage,
                                builder: (_, originalImage) {
                                  if (originalImage != null) {
                                    return Cropper(
                                      overlayColor: Colors.white,
                                      cropperKey: viewModel.params.cropperKey,
                                      overlayType: OverlayType.circle,
                                      rotationTurns: 0,
                                      image: Image.memory(originalImage),
                                      onScaleEnd: (details) => viewModel.adjustingImage(),
                                    );
                                  } else {
                                    return AnimatedGesture(
                                      callback: viewModel.pickImage,
                                      child: CircleAvatar(
                                        radius: (screenSize(context).width / 2) - 32.0,
                                        backgroundColor: const Color(0xFFCECECE),
                                      ),
                                    );
                                  }
                                },
                              );
                            }
                          },
                        ),
                      ),
                    ],
                  ),
                  SizedBox(
                    width: double.infinity,
                    child: OutlinedIconButton(
                      text: 'pick_image',
                      svg: 'gallery',
                      callback: viewModel.pickImage,
                    ),
                  ),
                  const SizedBox(height: 16),
                ],
              ),
            );
          },
        );
      },
    );
  }
}
