/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
import 'package:easy_localization/easy_localization.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:flutterx_live_data/flutterx_live_data.dart';
import 'package:tahsaldar/config/ui_config.dart';
import 'package:tahsaldar/extensions/assets_extension.dart';
import 'package:tahsaldar/models/data/payment/payment.dart';
import 'package:tahsaldar/router/app_router.dart';
import 'package:tahsaldar/ui/core/layouts/base_scroll_view.dart';
import 'package:tahsaldar/ui/core/layouts/theme_widget.dart';
import 'package:tahsaldar/ui/resources/dimensions/dimensions.dart';
import 'package:tahsaldar/ui/widgets/animations/animated_column.dart';
import 'package:tahsaldar/ui/widgets/buttons/customized_button.dart';
import 'package:tahsaldar/ui/widgets/confirmation_dialog/confirmation_dialog.dart';
import "package:tahsaldar/ui/widgets/instance/instance_builder.dart";

import '../../../resources/colors/colors.dart';
import '../../../resources/text_styles/text_styles.dart';
import '../../../shared/empty_view.dart';
import '../../../widgets/infinite_scroll_view/infinite_scroll_view.dart';
import "../viewmodels/transactions_viewmodel.dart";
import '../widgets/top_section/top_section.dart';
import '../widgets/transaction_card.dart';

class TransactionsMobileScreen extends StatelessWidget {
  const TransactionsMobileScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return InstanceBuilder<TransactionsViewModel>(
      builder: (viewModel) {
        return ThemeWidget(
          builder: (context, theme) {
            return BaseScrollView(
              child: AnimatedColumn(
                children: [
                  ///list of transactions
                  SizedBox(
                    height: screenSize(context).height * 0.9,
                    child: LiveDataBuilder<bool>(
                      data: viewModel.params.zeroTransactions,
                      builder: (context, isEmpty) {
                        return isEmpty
                            ? Column(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  const TopSection(),
                                  EmptyView(message: 'no_transactions_yet'.tr()),
                                  const SizedBox(),
                                ],
                              )
                            : InfiniteScrollView<TransactionsViewModel, Payment>(
                                loaderColor: DesignColors.secondaryBackgroundColor,
                                topWidget: Column(
                                  children: [
                                    const TopSection(),
                                    Padding(
                                      padding: const EdgeInsets.fromLTRB(14, 16, 24, 12),
                                      child: Row(
                                        children: [
                                          SvgPicture.asset('empty-wallet'.svgAsset, color: DesignColors.primaryColor),
                                          const SizedBox(width: 4),
                                          Text('last_transactions'.tr(), style: title2),
                                        ],
                                      ),
                                    ),
                                  ],
                                ),
                                viewModel: viewModel,
                                itemBuilder: (transaction) => Padding(
                                  padding: const EdgeInsets.symmetric(horizontal: twoUnits),
                                  child: TransactionCard(
                                    transaction: transaction,
                                    onDelete: () {
                                      ConfirmDialog.openDialog(
                                        context: context,
                                        message: "are_you_sure_you_want_to_delete_this_transaction".tr(
                                          namedArgs: {"model": "#${transaction.id}"},
                                        ),
                                        onConfirm: () {
                                          viewModel.deleteTransaction(transaction.id.toString());
                                        },
                                      );
                                    },
                                  ),
                                ),
                              );
                      },
                    ),
                  ),
                  Container(
                    padding: const EdgeInsets.symmetric(horizontal: twoUnits),
                    width: double.infinity,
                    child: CustomizedButton(
                      text: "add_payment",
                      icon: const Icon(Icons.add_box_outlined, color: Colors.white),
                      callback: () async {
                        final result = await appRouter.push(const AddPayment());
                        if (result != null) {
                          viewModel
                            ..refresh()
                            ..clear()
                            ..getTotalPaid()
                            ..getPaginationList();
                        }
                      },
                    ),
                  )
                ],
              ),
            );
          },
        );
      },
    );
  }
}
